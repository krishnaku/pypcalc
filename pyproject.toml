[tool.poetry]
name = "pypcalc"
version = "0.1.0"
description = "The Presence Calculus Toolkit"
authors = ["Krishna Kumar <kkumar@exathink.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://py.pcalc.org"
repository = "https://github.com/krishnaku/pypcalc"
packages = [{ include = "pcalc" }]
keywords = ["presence", "flow", "queueing", "analytics"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent"
]

[tool.poetry.dependencies]
python = ">=3.11"
numpy = ">=1.26,<2.0"
pandas = { version = ">=2.2,<3.0", optional = true }
polars = { version = ">=0.20,<0.21", optional = true }
matplotlib = { version = ">=3.8,<4.0", optional = true }
sortedcontainers = "^2.4.0"

[tool.poetry.extras]
pandas = ["pandas"]
polars = ["polars"]
matplotlib = ["matplotlib"]
docs = ["pandas", "polars", "matplotlib"]

[tool.poetry.group.dev.dependencies]
notebook = "*"
ipykernel = "*"
pytest = "*"
pytest-cov = "*"
black = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pdoc = "^15.0.3"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# pyproject.toml

[tool.pytest.ini_options]
# Limit collection to  test dir and enable coverage by default
testpaths = ["test/spath"]
addopts = [
  "--cov=spath.metrics",          # only measure spath/metrics.py (and imports within that module)
  "--cov-report=term-missing",    # show missing lines inline
  "--cov-report=html",            # htmlcov/index.html
  "--cov-report=xml",             # coverage.xml (for CI/diff-cover)
  "-q"
]
# Optional markers you’re already using
markers = [
  "slow: long-running or property tests"
]
# Ensure local package import works (so `from spath.metrics import ...` succeeds)
pythonpath = ["."]
# (Optional) tighten warnings
# filterwarnings = ["error"]

[tool.coverage.run]
branch = true
source = ["spath.metrics"]                # measure only your package
# If you want to completely ignore some files from measurement:
omit = [
  "test/*",
  "**/__init__.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 2
fail_under = 90                  # ← set your desired minimum coverage
# Lines you never want to count as missing
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
